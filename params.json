{"name":"Flexbox Functions","tagline":"Make Flexbox Development Painless with This Simple Script","body":"Flexbox Functions \r\n=================\r\n\r\nFlexbox is and awesome tool for responsive frontend development. However, the spec is still in its infancy: the syntax has gone through three major revisions, and to support older browsers, it takes 4+ lines of code to do almost anything anything with flexbox.\r\n\r\nFor those who's preferred CSS preprocessor is PHP, I have made a simple script that include methods for all the flexbox properties I know. It really eases the pain of working with flexbox.\r\n\r\n### Usage\r\n\r\nInclude `flexbox_functions.php` in `style.php`:\r\n\r\n``` php\r\n<?php \r\nheader(\"Content-type: text/css\"); \r\ninclude(\"flexbox_functions.php\");\r\n?>\r\n```\r\n\r\nThen call a flexbox method like this:\r\n\r\n``` php\r\nflexbox::order(1);\r\n```\r\n### Demo\r\nI have included a demo I built with the script. It is a fully responsive three column layout that reorders to put the sidebar and widget area at the bottom on mobile devices. It's not perfect since it was built extremely quickly and somewhat sloppily, but it give an idea of how the script & flexbox can be used for responsive design.\r\n\r\n### Method Names\r\nWhen naming the methods I chose semantics and guess-ability over brevity. In general, they are: [property name]_[current syntax value]. If the property name or value has a hyphen it is replaced by an underscore, and colons are also replaced by underscores. For example: \r\n```display: flex;``` becomes ```display_flex()``` and ```flex-direction: row-reverse;``` becomes ```flex_direction_row_reverse()```\r\n\r\nI plan to maintain another version with abbreviated method names in the future.\r\n\r\n### Flexbox Methods & Structure\r\n\r\nThere is a method for each property & value that I know of in the Flexbox spec. Order & value take a variable, but other than that I had to use separate methods for each value because of the changes in syntax.\r\n\r\n* display:flex\r\n* flex\r\n* order\r\n* justify-content:\r\n\t- start\r\n\t- center\r\n\t- end\r\n\t- space-between\r\n\t- space-around\r\n\r\n* align-items:\r\n\t- start\r\n\t- center\r\n\t- end\r\n\t- baseline\r\n\t- stretch\r\n\r\n* align-self:\r\n\t- auto\r\n\t- start\r\n\t- center\r\n\t- end\r\n\t- baseline\r\n\t- stretch\r\n\t\r\n* align-content:\r\n\t- start\r\n\t- center\r\n\t- end\r\n\t- space-between\r\n\t- space-around\r\n\t- stretch\r\n\r\n* flex-direction:\r\n\t- row\r\n\t- row-reverse\r\n\t- column\r\n\t- column-reverse\r\n\r\n* flex-wrap:\r\n\t- nowrap\r\n\t- wrap\r\n\t- wrap-reverse\r\n\r\n### Quirks\r\n- If you comment out a php flexbox class call in style.php, using *css* comments, it doesn't work. **You must use PHP comments inside the PHP tags**\r\n\r\n### Conclusion\r\n\r\nComments and critiques appreciated! If you feel like supporting the development of Flexbox Functions for somewhere between the price of a coffee and the price of a peanut, [Flattr Me.](https://flattr.com/thing/392659c5360cf80eded212bf7457609f)\r\n\r\n\r\n","google":"<script>   (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){   (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),   m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)   })(window,document,'script','//www.google-analytics.com/analytics.js','ga');    ga('create', 'UA-42966771-1', 'omphalosskeptic.github.io');   ga('send', 'pageview');  </script>","note":"Don't delete this file! It's used internally to help with page regeneration."}